"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const adminController_1 = require("../controllers/adminController");
const auth_1 = require("../middleware/auth");
const requestLogger_1 = require("../middleware/requestLogger");
const router = express_1.default.Router();
router.use(auth_1.authenticate);
router.use((0, auth_1.authorize)('ADMIN', 'MODERATOR'));
router.get('/dashboard', adminController_1.getDashboardStats);
router.get('/users', adminController_1.getUsers);
router.get('/users/:id', adminController_1.getUserById);
router.put('/users/:id', (0, requestLogger_1.logSecurityEvent)('admin_user_update', 'medium'), adminController_1.updateUser);
router.post('/users/:id/ban', (0, requestLogger_1.logSecurityEvent)('admin_user_ban', 'high'), adminController_1.banUser);
router.post('/users/:id/unban', (0, requestLogger_1.logSecurityEvent)('admin_user_unban', 'medium'), adminController_1.unbanUser);
router.post('/users/:id/suspend', (0, requestLogger_1.logSecurityEvent)('admin_user_suspend', 'high'), adminController_1.suspendUser);
router.post('/users/:id/unsuspend', (0, requestLogger_1.logSecurityEvent)('admin_user_unsuspend', 'medium'), adminController_1.unsuspendUser);
router.post('/users/:id/verify', (0, requestLogger_1.logSecurityEvent)('admin_user_verify', 'low'), adminController_1.verifyUser);
router.post('/users/:id/unverify', (0, requestLogger_1.logSecurityEvent)('admin_user_unverify', 'low'), adminController_1.unverifyUser);
router.get('/videos', adminController_1.getVideos);
router.get('/videos/:id', adminController_1.getVideoById);
router.post('/videos/:id/approve', (0, requestLogger_1.logSecurityEvent)('admin_video_approve', 'low'), adminController_1.approveVideo);
router.post('/videos/:id/reject', (0, requestLogger_1.logSecurityEvent)('admin_video_reject', 'medium'), adminController_1.rejectVideo);
router.delete('/videos/:id', (0, requestLogger_1.logSecurityEvent)('admin_video_delete', 'high'), adminController_1.deleteVideo);
router.get('/reports', adminController_1.getReports);
router.get('/reports/:id', adminController_1.getReportById);
router.post('/reports/:id/resolve', (0, requestLogger_1.logSecurityEvent)('admin_report_resolve', 'medium'), adminController_1.resolveReport);
router.post('/reports/:id/dismiss', (0, requestLogger_1.logSecurityEvent)('admin_report_dismiss', 'low'), adminController_1.dismissReport);
router.get('/analytics', adminController_1.getAnalytics);
router.get('/logs', (0, auth_1.authorize)('ADMIN'), adminController_1.getSystemLogs);
router.get('/settings', adminController_1.getSettings);
router.put('/settings', (0, auth_1.authorize)('ADMIN'), (0, requestLogger_1.logSecurityEvent)('admin_settings_update', 'high'), adminController_1.updateSettings);
router.get('/monetization', adminController_1.getMonetizationStats);
router.post('/monetization/:userId/approve', (0, auth_1.authorize)('ADMIN'), (0, requestLogger_1.logSecurityEvent)('admin_monetization_approve', 'medium'), adminController_1.approveMonetization);
router.post('/monetization/:userId/reject', (0, auth_1.authorize)('ADMIN'), (0, requestLogger_1.logSecurityEvent)('admin_monetization_reject', 'medium'), adminController_1.rejectMonetization);
exports.default = router;
//# sourceMappingURL=admin.js.map